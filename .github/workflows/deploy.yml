name: Deploy coursegenix Next.js to VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        vps: [vps1, vps2]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Decode ENV
        run: echo "${{ secrets.ENV_FILE_CONTENT }}" > ./coursegenix-ai-learning-studio/.env
        shell: bash

      - name: View ENV
        run: cat ./coursegenix-ai-learning-studio/.env
        shell: bash

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: ./coursegenix-ai-learning-studio
          file: ./coursegenix-ai-learning-studio/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/coursegenix-app:latest
          build-args: |
            STRIPE_API_KEY=${{ secrets.STRIPE_API_KEY }}
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}
            GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
            GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
            OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
            UNSPLASH_API_KEY=${{ secrets.UNSPLASH_API_KEY }}
            YOUTUBE_API_KEY=${{ secrets.YOUTUBE_API_KEY }}
            NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }}
            STRIPE_WEBHOOK_SECRET=${{ secrets.STRIPE_WEBHOOK_SECRET }}
            _GITHUB_CLIENT_ID=${{ secrets.GITHUB_CLIENT_ID }}
            _GITHUB_CLIENT_SECRET=${{ secrets.GITHUB_CLIENT_SECRET }}

      - name: Deploy to VPS ${{ matrix.vps }}
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets[format('VPS{0}_HOST', matrix.vps == 'vps1' && '1' || '2')] }}
          username: ${{ secrets[format('VPS{0}_USERNAME', matrix.vps == 'vps1' && '1' || '2')] }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/coursegenix-app:latest
            sudo docker stop coursegenix-container || true
            sudo docker rm coursegenix-container || true
            docker run -d -p 3000:3000 \
              -e STRIPE_API_KEY=${{ secrets.STRIPE_API_KEY }} \
              -e DATABASE_URL=${{ secrets.DATABASE_URL }} \
              -e NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }} \
              -e GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }} \
              -e GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }} \
              -e OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} \
              -e UNSPLASH_API_KEY=${{ secrets.UNSPLASH_API_KEY }} \
              -e YOUTUBE_API_KEY=${{ secrets.YOUTUBE_API_KEY }} \
              -e NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }} \
              -e STRIPE_WEBHOOK_SECRET=${{ secrets.STRIPE_WEBHOOK_SECRET }} \
              -e _GITHUB_CLIENT_ID=${{ secrets._GITHUB_CLIENT_ID }} \
              -e _GITHUB_CLIENT_SECRET=${{ secrets._GITHUB_CLIENT_SECRET }} \
              --name coursegenix-container ${{ secrets.DOCKER_USERNAME }}/coursegenix-app:latest
